{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (name, email, password) => api.post('/auth/register', {\n    name,\n    email,\n    password\n  }),\n  getMe: () => api.get('/auth/me')\n};\n\n// Journal API\nexport const journalAPI = {\n  getEntries: (page = 1, limit = 20) => api.get(`/journal?page=${page}&limit=${limit}`),\n  getEntry: id => api.get(`/journal/${id}`),\n  createEntry: data => api.post('/journal', data),\n  updateEntry: (id, data) => api.put(`/journal/${id}`, data),\n  deleteEntry: id => api.delete(`/journal/${id}`),\n  getEntriesByDateRange: (start, end) => api.get(`/journal/date-range/${start}/${end}`)\n};\n\n// Stories API\nexport const storiesAPI = {\n  getStories: (page = 1, limit = 20, tone) => {\n    const params = new URLSearchParams({\n      page,\n      limit\n    });\n    if (tone) params.append('tone', tone);\n    return api.get(`/stories?${params}`);\n  },\n  getStory: id => api.get(`/stories/${id}`),\n  extractStories: journalId => api.post(`/stories/extract/${journalId}`),\n  createStory: data => api.post('/stories', data),\n  refineStory: (id, data) => api.post(`/stories/${id}/refine`, data),\n  getConversationStarters: id => api.get(`/stories/${id}/conversation-starters`),\n  updateStory: (id, data) => api.patch(`/stories/${id}`, data),\n  deleteStory: id => api.delete(`/stories/${id}`)\n};\n\n// Practice API\nexport const practiceAPI = {\n  getSessions: (page = 1, limit = 20) => api.get(`/practice/sessions?page=${page}&limit=${limit}`),\n  getSession: id => api.get(`/practice/sessions/${id}`),\n  startSession: data => api.post('/practice/sessions', data),\n  getFeedback: data => api.post('/practice/feedback', data),\n  getConversationStarters: storyId => api.get(`/practice/conversation-starters?story_id=${storyId}`),\n  getStats: () => api.get('/practice/stats')\n};\n\n// People API\nexport const peopleAPI = {\n  getPeople: () => api.get('/people'),\n  getPerson: id => api.get(`/people/${id}`),\n  createPerson: data => api.post('/people', data),\n  updatePerson: (id, data) => api.put(`/people/${id}`, data),\n  deletePerson: id => api.delete(`/people/${id}`),\n  getStoryRecommendations: id => api.get(`/people/${id}/story-recommendations`),\n  tagStory: (personId, storyId) => api.post(`/people/${personId}/tag-story/${storyId}`),\n  untagStory: (personId, storyId) => api.delete(`/people/${personId}/tag-story/${storyId}`),\n  tagJournal: (personId, journalId) => api.post(`/people/${personId}/tag-journal/${journalId}`),\n  untagJournal: (personId, journalId) => api.delete(`/people/${personId}/tag-journal/${journalId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","defaults","common","window","location","href","authAPI","login","email","password","post","register","name","getMe","get","journalAPI","getEntries","page","limit","getEntry","id","createEntry","data","updateEntry","put","deleteEntry","delete","getEntriesByDateRange","start","end","storiesAPI","getStories","tone","params","URLSearchParams","append","getStory","extractStories","journalId","createStory","refineStory","getConversationStarters","updateStory","patch","deleteStory","practiceAPI","getSessions","getSession","startSession","getFeedback","storyId","getStats","peopleAPI","getPeople","getPerson","createPerson","updatePerson","deletePerson","getStoryRecommendations","tagStory","personId","untagStory","tagJournal","untagJournal"],"sources":["/Users/tobysauze/Documents/code/social dev app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (name, email, password) => api.post('/auth/register', { name, email, password }),\n  getMe: () => api.get('/auth/me'),\n};\n\n// Journal API\nexport const journalAPI = {\n  getEntries: (page = 1, limit = 20) => api.get(`/journal?page=${page}&limit=${limit}`),\n  getEntry: (id) => api.get(`/journal/${id}`),\n  createEntry: (data) => api.post('/journal', data),\n  updateEntry: (id, data) => api.put(`/journal/${id}`, data),\n  deleteEntry: (id) => api.delete(`/journal/${id}`),\n  getEntriesByDateRange: (start, end) => api.get(`/journal/date-range/${start}/${end}`),\n};\n\n// Stories API\nexport const storiesAPI = {\n  getStories: (page = 1, limit = 20, tone) => {\n    const params = new URLSearchParams({ page, limit });\n    if (tone) params.append('tone', tone);\n    return api.get(`/stories?${params}`);\n  },\n  getStory: (id) => api.get(`/stories/${id}`),\n  extractStories: (journalId) => api.post(`/stories/extract/${journalId}`),\n  createStory: (data) => api.post('/stories', data),\n  refineStory: (id, data) => api.post(`/stories/${id}/refine`, data),\n  getConversationStarters: (id) => api.get(`/stories/${id}/conversation-starters`),\n  updateStory: (id, data) => api.patch(`/stories/${id}`, data),\n  deleteStory: (id) => api.delete(`/stories/${id}`),\n};\n\n// Practice API\nexport const practiceAPI = {\n  getSessions: (page = 1, limit = 20) => api.get(`/practice/sessions?page=${page}&limit=${limit}`),\n  getSession: (id) => api.get(`/practice/sessions/${id}`),\n  startSession: (data) => api.post('/practice/sessions', data),\n  getFeedback: (data) => api.post('/practice/feedback', data),\n  getConversationStarters: (storyId) => api.get(`/practice/conversation-starters?story_id=${storyId}`),\n  getStats: () => api.get('/practice/stats'),\n};\n\n// People API\nexport const peopleAPI = {\n  getPeople: () => api.get('/people'),\n  getPerson: (id) => api.get(`/people/${id}`),\n  createPerson: (data) => api.post('/people', data),\n  updatePerson: (id, data) => api.put(`/people/${id}`, data),\n  deletePerson: (id) => api.delete(`/people/${id}`),\n  getStoryRecommendations: (id) => api.get(`/people/${id}/story-recommendations`),\n  tagStory: (personId, storyId) => api.post(`/people/${personId}/tag-story/${storyId}`),\n  untagStory: (personId, storyId) => api.delete(`/people/${personId}/tag-story/${storyId}`),\n  tagJournal: (personId, journalId) => api.post(`/people/${personId}/tag-journal/${journalId}`),\n  untagJournal: (personId, journalId) => api.delete(`/people/${personId}/tag-journal/${journalId}`)\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}